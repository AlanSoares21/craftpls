@inject ServerConfig config
@inject IViewLocalizer text
@using AlternativeMkt.Db
@model SearchItemPrices

@{
    double currentPage = (Model.Query.start + 1) / Model.Query.count + 1;
    int next =  Model.Query.start + Model.Query.count;
    int previous =  Model.Query.start - Model.Query.count;
}

<section class="row mb-4">
    <div class="col-2">
        @{
            if (@Model.Item.Asset != null) {
                <img src=@config.AssetsUrl/@Model.Item.Asset.Endpoint class="img-thumbnail" width="180" height="180"/>
            }
        }
        
    </div>
    <div class="col-6">
        @if (Model.Item.DataByCulture.Count > 0) {
            <h5 class="card-title">@Model.Item.DataByCulture.First().Name</h5>
        } else {
            <h5 class="card-title">@Model.Item.Name</h5>
        }
        Level: @Model.Item.Level
        <div>
            @foreach(var itemAttribute in Model.Item.Attributes) {
                <span class="badge bg-warning">
                    @itemAttribute.Attribute.Name - @itemAttribute.Value
                </span>
            }
        </div>
    </div>
    <div class="col-auto">
        <form method="get" asp-action="Manufacturers" asp-route-itemId=@Model.Item.Id>
            <div class="mb-1">
                @{
                    if (Model.Query.serverId is null) {
                        <vc:server-selection name="serverId" hasoptionany="y" />
                    } else {
                        <vc:server-selection name="serverId" hasoptionany="y" selected="@((int)Model.Query.serverId)" />
                    }
                }
            </div>
            <div class="mb-1">
                <input 
                    class="form-check-input" 
                    type="checkbox" 
                    name="orderByCraftPrice" 
                    id="orderByCraftPrice" 
                    checked="@Model.Query.orderByCraftPrice"
                >
                <label 
                    class="form-check-label" 
                    for="orderByCraftPrice"
                >
                    @text["OrderByCraftPriceLabel"]
                </label>
            </div>
            <input 
                class="form-control btn-success" 
                type="submit" 
                value=@text["FilterBtn"]
            />
            <input type="hidden" value="@Model.Item.Id" name="itemId" />
        </form>
    </div>
</section>
<section class="mb-2">
    <ul class="list-group">
        @foreach (CraftItemsPrice itemPrice in Model.Prices.Data)
        {
            <a
                class="list-group-item list-group-item-action"
                asp-controller="Request"
                asp-action="Open" 
                asp-route-id="@itemPrice.Id"
                asp-route-manufacturerId="@itemPrice.ManufacturerId"
            >
                @if (Model.Query.orderByCraftPrice) {
                    <div>
                        <b>@text["CraftPriceTxt"]: @itemPrice.Price</b> 
                        @text["TotalPriceTxt"]: @itemPrice.TotalPrice
                    </div>
                } else {
                    <div>
                        @text["CraftPriceTxt"]: @itemPrice.Price
                        <b>@text["TotalPriceTxt"]: @itemPrice.TotalPrice</b> 
                    </div>
                }
                @foreach(var account in itemPrice.Manufacturer.Server.GameAccounts) {
                    <span class="badge bg-info">@account.Name</span>
                }
                @itemPrice.Manufacturer.Server.Name
            </a>
        }
    </ul>
</section>
<section class="row justify-content-center">
    <div class="col-auto">
        @await Component.InvokeAsync("Pagination", new {
            start = Model.Query.start,
            count = Model.Query.count,
            total = Model.Prices.Total,
            query = ServerUtils.GetQueryValues(Model.Query)
        })
    </div>
</section>
<section class="row justify-content-center">
    <div class="col-auto">
        @{
            string name = Model.Item.Name + "";
            if (Model.Item.DataByCulture.Count > 0)
                name = Model.Item.DataByCulture.First().Name;
        }
        @Model.Prices.Total @text["XCraftersFoundForItemTxt"] "@name"
    </div>
</section>
