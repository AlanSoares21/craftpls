@inject ServerConfig config
@using AlternativeMkt.Db
@model SearchItemPrices

@{
    double currentPage = (Model.Query.start + 1) / Model.Query.count + 1;
    int next =  Model.Query.start + Model.Query.count;
    int previous =  Model.Query.start - Model.Query.count;
}

<section class="row mb-4">
    <div class="col-2">
        @{
            if (@Model.Item.Asset != null) {
                <img src=@config.AssetsUrl/@Model.Item.Asset.Endpoint class="img-thumbnail" width="180" height="180"/>
            }
        }
        
    </div>
    <div class="col-6">
        <h5 class="card-title">@Model.Item.Name</h5>
        Level: @Model.Item.Level
    </div>
    <div class="col-auto">
        <form method="get" asp-action="Manufacturers" asp-route-itemId=@Model.Item.Id>
            <div class="mb-1">
                @{
                    if (Model.Query.serverId is null) {
                        <vc:server-selection name="serverId" hasoptionany="y" />
                    } else {
                        <vc:server-selection name="serverId" hasoptionany="y" selected="@((int)Model.Query.serverId)" />
                    }
                }
            </div>
            <div class="mb-1">
                <input class="form-check-input" type="checkbox" name="orderByCraftPrice" id="orderByCraftPrice" checked="@Model.Query.orderByCraftPrice">
                <label class="form-check-label" for="orderByCraftPrice">Order by craft price</label>
            </div>
            <input class="form-control btn-success" type="submit" value="Apply" />
            <input type="hidden" value="@Model.Item.Id" name="itemId" />
        </form>
    </div>
</section>
<section class="row">
    @foreach (CraftItemsPrice itemPrice in Model.Prices.Data)
    {
        <div class="col mb-2">
            <a
                class="list-group-item list-group-item-action"
                asp-controller="Request"
                asp-action="Open" 
                asp-route-id="@itemPrice.Id"
                asp-route-manufacturerId="@itemPrice.ManufacturerId"
            >
                <p>Server: @itemPrice.Manufacturer.Server.Name</p>
                <p>
                    Manufacturer: 
                    @string.Join(
                        ", ", 
                        itemPrice.Manufacturer.Server.GameAccounts.Select(a => a.Name)
                    )
                </p>
                @{
                    if (Model.Query.orderByCraftPrice) {
                        <p>
                            Total Price: @itemPrice.TotalPrice
                            <b>Craft Price: @itemPrice.Price</b> 
                        </p>
                    } else {
                        <p>
                            <b>Total Price: @itemPrice.TotalPrice</b> 
                            Craft Price: @itemPrice.Price
                        </p>
                    }
                }
            </a>
        </div>
    }
</section>
<section class="row justify-content-center">
    <div class="col-auto">
        <ul class="pagination">
            @if (previous < 0) {
                <li class="page-item disabled">
                    <a class="page-link">Previous</a>
                </li>
            } else {
                <li class="page-item">
                    <a 
                        class="page-link" 
                        asp-route-itemId="@Model.Item.Id" 
                        asp-route-orderByCraftPrice=@(Model.Query.orderByCraftPrice ? "on" : "off")
                        asp-route-serverId="@(Model.Query.serverId is null ? -1 : Model.Query.serverId)"
                        asp-route-start=@previous
                    >
                        Previous
                    </a>
                </li>
            }
            
            <li class="page-item">
                <a 
                    class="page-link" 
                    asp-route-itemId="@Model.Item.Id" 
                    asp-route-orderByCraftPrice=@(Model.Query.orderByCraftPrice ? "on" : "off")
                    asp-route-serverId="@(Model.Query.serverId is null ? -1 : Model.Query.serverId)"
                    asp-route-start=@Model.Query.start 
                >
                    @currentPage
                </a>
            </li>
            
            @if (next >= Model.Prices.Total) {
                <li class="page-item disabled">
                    <a class="page-link">Next</a>
                </li>
            } else {
                <li class="page-item">
                    <a 
                        class="page-link" 
                        asp-route-itemId="@Model.Item.Id" 
                        asp-route-orderByCraftPrice=@(Model.Query.orderByCraftPrice ? "on" : "off")
                        asp-route-serverId="@(Model.Query.serverId is null ? -1 : Model.Query.serverId)"
                        asp-route-start=@next
                    >
                        Next
                    </a>
                </li>
            }
        </ul>
    </div>
</section>
<section class="row justify-content-center">
    <div class="col-auto">
        @Model.Prices.Total crafters found for "@Model.Item.Name".
    </div>
</section>
