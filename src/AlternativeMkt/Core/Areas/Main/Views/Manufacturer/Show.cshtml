@inject ServerConfig config
@inject IViewLocalizer text
@model ManufacturerShowData

@{
    int current = Model.Query.start / Model.Query.count + 1;
    int next = Model.Query.start + Model.Query.count;
    int previous = Model.Query.start - Model.Query.count;
    if (current == 1 && previous < 0)
        previous = 0;
    int last = (Model.Prices.Total - Model.Query.count) + Model.Prices.Total % Model.Query.count;
}

<section class="row text-center mb-2">
    @if (!string.IsNullOrEmpty(Model.Manufacturer.User.Name)) {
        <h1 class="col-12 display-5">@Model.Manufacturer.User.Name</h1>
    }
    <h2 class="col-12 display-7">@Model.Manufacturer.Server.Name</h2>
    <div>
        @foreach(var account in Model.Manufacturer.User.GameAccounts) {
            <span class="badge bg-info">@account.Name</span>
        }
    </div>
</section>

<section>
     <form class="row mb-3">
        <div class="col-auto">
            <label for="itemName" class="form-label">@text["ItemNameLabel"]</label>
            <input class="form-control" name="itemName" type="text" value="@Model.Query.itemName" />
        </div>
        <div class="col-auto">
            @{
                if (Model.Query.itemCategory == null) {
                    <vc:category-selection name="itemCategory" hasoptionany="y" />
                } else {
                    <vc:category-selection name="itemCategory" hasoptionany="y" selected="@Model.Query.itemCategory.Value" />
                }
            }
        </div>
        <div class="col-auto">
            <label for="itemMinLevel" class="form-label">@text["MinLevelLabel"]</label>
            <input class="form-control" name="itemMinLevel" type="numeric" value="@Model.Query.itemMinLevel" />
        </div>
        <div class="col-auto">
            <label for="itemMaxLevel" class="form-label">@text["MaxLevelLabel"]</label>
            <input class="form-control" name="itemMaxLevel" type="numeric" value="@Model.Query.itemMaxLevel" />
        </div>
        <div class="col-auto pt-4">
            <input class="btn btn-success" type="submit" value=@text["btnSearch"] />
        </div>
    </form>
</section>

<section class="row justify-content-center">
    @foreach(var price in Model.Prices.Data) {
        <div class="col mb-2">
            <div class="card" style="width: 12rem;">
                @if (@price.Item.Asset is not null) {
                    <img src="@config.AssetsUrl/@price.Item.Asset.Endpoint" class="card-img-top"/>
                }
                <div class="card-header">
                    @price.Item.Name
                    Level: @price.Item.Level
                    <div>
                        @foreach(var itemAttribute in price.Item.Attributes) {
                            <span class="badge bg-warning">
                                @itemAttribute.Attribute.Name -
                                @itemAttribute.Value
                            </span>
                        }
                    </div>
                </div>
                <div class="card-body">
                    <div>@text["CraftPriceLabel"]: @price.Price</div>
                    <div>@text["TotalPriceLabel"]: @price.TotalPrice</div>
                </div>
                <div class="card-footer" style="padding: 0px;">
                    <a
                        class="btn btn-primary w-100 rounded-0"
                        asp-controller="Request"
                        asp-action="Open" 
                        asp-route-id="@price.Id"
                        asp-route-manufacturerId="@price.ManufacturerId"
                    >
                        Open
                    </a>
                </div>
            </div>
        </div>
    }
</section>

<section class="row justify-content-center">
    <nav class="col-auto">
        @await Component.InvokeAsync("Pagination", new {
            start = Model.Query.start,
            count = Model.Query.count,
            total = Model.Prices.Total,
            query = ServerUtils.GetQueryValues(Model.Query)
        })
    </nav>
</section>